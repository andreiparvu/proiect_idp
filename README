CodeInChains (Andrei Parvu & Daniel Ciocirlan, 341C3)

1. Detalii de implementare

	---- Tema1:
	
	Am urmarit arhitectura sugerata de enunt. Astfel, avem componentele centrale cerute de specificatii, avand in vedere stadiul proiectului: Mediator, GUI, WebServiceClient.
	
	Mediatorul este cel responsabil de datele disponibile ale aplicatiei si de asocierile aferente (utilizatori-fisiere-stadiu de descarcare/incarcare etc). Tot mediatorul este cel care controleaza interfata cu utilizatorul.
	
	WebServiceClient este raspunzator de aportul de date. Deocamdata, "aduce" (in mod mock/simulat) lista de fisiere ceruta pentru utilzatorul respectiv. Descarcarea fisierelor se face tot simulat, prin thread-uri.
	
	Interfata cu utilizatorul arata asemanator cu cea sugerata de enuntul temei, cu toate componentele necesare separate prin despartitoare: lista de useri, lista de fisiere, tabelul cu descarcari+progressbar-uri, status-label-ul de jos etc.
	
	---- Tema2:

	Am adaugat suport pentru descarcarea efectiva a fisierelor prin SocketChannels:
		- aplicatia ruleaza un thread care asculta eventualele cereri de fisiere de la alti utilizatori
		- la fiecare download, se creeaza un thread care cere fisierul respectiv de la utilizatorul selectat
		- am implementat un protocol de comunicatie pentru toate operatiile care se fac:
			- exista mesaje speciale pentru cerere de date despre fisier, cerere de bucata de fisier si raspunsuri la aceste cereri
			- fisierele se descarca pe bucati, urmand ca aplicatia client (cea care cere fisierul) sa le asambleze  pe masura ce se descarca
		- fisierele se trimit pe bucati, iar scrierea efectiva in fisier se face cu mapare in memorie a bucatilor (byte[]) care vin
		- detaliile de implementare efective se gasesc comentate/explicate in cod:
			- buclele principale "server"/"client"
			- cererile de schimbare a interesului pentru cheile de selectie puse in coada
			- worker thread-ul fiecarui Client
			- double-dispatch-ul mesajelor

	Tot mecanismul de download a fost legat cu interfata; progressbar-urile afiseaza procentajul real de descarcare a fisierelor, status-urile se actualizeaza.

	Am adaugat logging pentru useri: fiecare user are fisierul de log special in care se tin informatii despre toate operatiile (cerere de lista de fisiere, bucati de fisiere primite etc.)


2. Rulare
	
	Proiectul are un fisier build.xml care ii permite rularea in consola cu ant.
	Recomandam importarea proiectului in Eclipse.

	Aplicatia necesita 3 parametri in linia de comanda: user, ip si port. Momentan functioneaza pentru 2 useri cu informatiile hardcodate:

	- andrei,127.0.0.1,8000
	- daniel,127.0.0.1,9000